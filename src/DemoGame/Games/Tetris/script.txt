var blocSize = 10;
var world;
var tetrominos;
var currentTetromino;
var iteration;

function Init()
{
    var i;

    DrawBackground();
    
    world = arrayNew();
    for (i = 0;i < 10 * 22;i++)
    {
        arrayPush(world, 0);
    }
    
    tetrominos = arrayNew();
    
    var tetromino_i = arrayNew();
    arrayPush(tetromino_i, arrayNew(0, 0, 0, 0,  1, 1, 1, 1,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_i, arrayNew(0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0));
    arrayPush(tetromino_i, arrayNew(0, 0, 0, 0,  1, 1, 1, 1,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_i, arrayNew(0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0,  0, 0, 1, 0));
    arrayPush(tetrominos, tetromino_i);
    
	var tetromino_o = arrayNew();
    arrayPush(tetromino_o, arrayNew(0, 0, 0, 0,  0, 2, 2, 0,  0, 2, 2, 0,  0, 0, 0, 0));
    arrayPush(tetromino_o, arrayNew(0, 0, 0, 0,  0, 2, 2, 0,  0, 2, 2, 0,  0, 0, 0, 0));
    arrayPush(tetromino_o, arrayNew(0, 0, 0, 0,  0, 2, 2, 0,  0, 2, 2, 0,  0, 0, 0, 0));
    arrayPush(tetromino_o, arrayNew(0, 0, 0, 0,  0, 2, 2, 0,  0, 2, 2, 0,  0, 0, 0, 0));
    arrayPush(tetrominos, tetromino_o);
	
	var tetromino_t = arrayNew();
    arrayPush(tetromino_t, arrayNew(3, 3, 3, 0,  0, 3, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_t, arrayNew(0, 0, 3, 0,  0, 3, 3, 0,  0, 0, 3, 0,  0, 0, 0, 0));
    arrayPush(tetromino_t, arrayNew(0, 0, 0, 0,  0, 3, 0, 0,  3, 3, 3, 0,  0, 0, 0, 0));
    arrayPush(tetromino_t, arrayNew(3, 0, 0, 0,  3, 3, 0, 0,  3, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetrominos, tetromino_t);
	
	var tetromino_l = arrayNew();
    arrayPush(tetromino_l, arrayNew(4, 4, 4, 0,  4, 0, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_l, arrayNew(0, 4, 4, 0,  0, 0, 4, 0,  0, 0, 4, 0,  0, 0, 0, 0));
    arrayPush(tetromino_l, arrayNew(0, 0, 0, 0,  0, 0, 4, 0,  4, 4, 4, 0,  0, 0, 0, 0));
    arrayPush(tetromino_l, arrayNew(4, 0, 0, 0,  4, 0, 0, 0,  4, 4, 0, 0,  0, 0, 0, 0));
    arrayPush(tetrominos, tetromino_l);
	
	var tetromino_j = arrayNew();
    arrayPush(tetromino_j, arrayNew(5, 5, 5, 0,  0, 0, 5, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_j, arrayNew(0, 0, 5, 0,  0, 0, 5, 0,  0, 5, 5, 0,  0, 0, 0, 0));
    arrayPush(tetromino_j, arrayNew(0, 0, 0, 0,  5, 0, 0, 0,  5, 5, 5, 0,  0, 0, 0, 0));
    arrayPush(tetromino_j, arrayNew(5, 5, 0, 0,  5, 0, 0, 0,  5, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetrominos, tetromino_j);
	
	var tetromino_z = arrayNew();
    arrayPush(tetromino_z, arrayNew(6, 6, 0, 0,  0, 6, 6, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_z, arrayNew(0, 0, 6, 0,  0, 6, 6, 0,  0, 6, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_z, arrayNew(6, 6, 0, 0,  0, 6, 6, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_z, arrayNew(0, 0, 6, 0,  0, 6, 6, 0,  0, 6, 0, 0,  0, 0, 0, 0));
    arrayPush(tetrominos, tetromino_z);
	
	var tetromino_s = arrayNew();
    arrayPush(tetromino_s, arrayNew(0, 7, 7, 0,  7, 7, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_s, arrayNew(0, 7, 0, 0,  7, 7, 0, 0,  7, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_s, arrayNew(0, 7, 7, 0,  7, 7, 0, 0,  0, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetromino_s, arrayNew(0, 7, 0, 0,  7, 7, 0, 0,  7, 0, 0, 0,  0, 0, 0, 0));
    arrayPush(tetrominos, tetromino_s);
	
    currentTetromino = structureNew();
    currentTetromino.x = 3;
    currentTetromino.y = 0;
    currentTetromino.tetromino_index = 2;
    currentTetromino.orientation = 0;
    
    iteration = 0;
}

function testColision(x, y, orientation)
{
    var x1, y1; 
    for(y1 = 0;y1 < 4;y1++)
    {
        for(x1 = 0;x1 < 4;x1++)
        {
            if(tetrominos[currentTetromino.tetromino_index][orientation][y1 * 4 + x1] > 0)
			{
				if(x + x1 < 0 || x + x1 > 9 || y + y1 > 21 || world[((y + y1) * 10) + x + x1] > 0)
				{
					return true;
				}
			}
        }
    }
	return false;
}

function insertTetromino(x, y, orientation)
{
    var x1, y1; 
    for(y1 = 0;y1 < 4;y1++)
    {
        for(x1 = 0;x1 < 4;x1++)
        {
            if(tetrominos[currentTetromino.tetromino_index][orientation][y1 * 4 + x1] > 0)
			{
				world[((y + y1) * 10) + x + x1] = tetrominos[currentTetromino.tetromino_index][orientation][y1 * 4 + x1];
			}
        }
    }
}

function removeLine(y)
{
	var x, y1;
	for (y1 = y - 1;y1 > 0;y1--)
	{
		for (x = 0;x < 10;x++)
		{
			world[((y1 + 1) * 10) + x] = world[(y1 * 10) + x];
		}
	}
}

function removeLines()
{
	var x, y, removeLine;
	for (y = 21;y > 0;y--)
	{
		removeLine = true;
		for (x = 0;x < 10;x++)
		{
			if(world[(y * 10) + x] == 0)
			{
				removeLine = false;
				break;
			}
		}
		if(removeLine)
		{
			removeLine(y);
			y++;
		}
	}
}

function Update()
{
	var next_orientation;
    if(iteration % 7 == 0 || sprite.direction.y != 0)
    {
		if(testColision(currentTetromino.x, currentTetromino.y + 1, currentTetromino.orientation))
		{
			insertTetromino(currentTetromino.x, currentTetromino.y, currentTetromino.orientation);
			currentTetromino.y = 0;
			currentTetromino.x = 3;
			currentTetromino.tetromino_index = random() % 6;
			removeLines();
		}
		else
		{
			currentTetromino.y++;
		}
    }
    
	if(testColision(currentTetromino.x + sprite.direction.x, currentTetromino.y, currentTetromino.orientation) == false)
	{
		currentTetromino.x += sprite.direction.x;
	}
    
    
    if(isKeyPressed(32))
    {
		next_orientation = (currentTetromino.orientation + 1) % 4;
		if(testColision(currentTetromino.x, currentTetromino.y, next_orientation) == false)
		{
			currentTetromino.orientation = next_orientation;
		}
    }
    
    iteration++;
}

function DrawBloc(x, y, num)
{
    drawImage(imageBlocs, x * blocSize, y * blocSize, blocSize, blocSize, num * blocSize, 0);
}

function DrawBackground()
{
    var i;
    
    for(i = 0;i < 32;i++)
    {
        DrawBloc(i, 0, 0);
        DrawBloc(i, 23, 0);
    }
    
    for(i = 1;i < 23;i++)
    {
        DrawBloc(0, i, 0);
    }
    
    var j;
    
    for(j = 11;j < 32;j++)
    {
        for(i = 1;i < 23;i++)
        {
            DrawBloc(j , i, 0);
        }
    }
}

function DrawWorld()
{
    var x, y;
    for(y = 0;y < 22;y++)
    {
        for(x = 0;x < 10;x++)
        {
            if(world[y * 10 + x] != 0)
            {
                DrawBloc(x + 1, y + 1, world[y * 10 + x]);
            }
        }
    }
}

function DrawCurrentTetromino()
{
    var x, y, blocValue;
    for(y = 0;y < 4;y++)
    {
        for(x = 0;x < 4;x++)
        {
            blocValue = tetrominos[currentTetromino.tetromino_index][currentTetromino.orientation][y * 4 + x];
            if(blocValue != 0)
            {
                DrawBloc(currentTetromino.x + x + 1, currentTetromino.y + y + 1, blocValue);
            }
        }
    }
}

function Draw()
{
    fillRectangle("SkyBlue", 1 * blocSize, 1 * blocSize, 10 * blocSize, 22 * blocSize);
	DrawWorld();
    DrawCurrentTetromino();
    
    flip();
}


var imageBlocs = loadImage("blocs.png");

var sprite = structureNew();
sprite.x = 0;
sprite.y = 0;
sprite.direction = structureNew();
sprite.direction.x = 0;
sprite.direction.y = 0;

var lastFlip = date();
var millisecond;

Init();

while(true)
{
    if(isKeyPressed(40))
    {
        sprite.direction.y = 1;
    }
    else if(isKeyPressed(38))
    {
        sprite.direction.y = -1;
    }
    else
    {
        sprite.direction.y = 0;
    }
    
    if(isKeyPressed(37))
    {
        sprite.direction.x = -1;
    }
    else if(isKeyPressed(39))
    {
        sprite.direction.x = 1;
    }
    else
    {
        sprite.direction.x = 0;
    }
    
    Update();
    Draw();
    
    millisecond = timespanTotalMilliseconds(date() - lastFlip);
    sleep(100 - millisecond);
    
    lastFlip = date();
    
}
